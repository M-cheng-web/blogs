import{_ as s,c as a,o as n,N as l}from"./chunks/framework.78c68b71.js";const A=JSON.parse('{"title":"正则","description":"","frontmatter":{},"headers":[],"relativePath":"web-basics/javascript/regular.md","lastUpdated":1675842293000}'),o={name:"web-basics/javascript/regular.md"},t=l(`<h1 id="正则" tabindex="-1">正则 <a class="header-anchor" href="#正则" aria-label="Permalink to &quot;正则&quot;">​</a></h1><p>这里不讲多,主要是放出来几个实践运用</p><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><h3 id="转义字符" tabindex="-1">转义字符 <a class="header-anchor" href="#转义字符" aria-label="Permalink to &quot;转义字符&quot;">​</a></h3><table><thead><tr><th>key</th><th style="text-align:center;">value</th><th style="text-align:center;">备注</th></tr></thead><tbody><tr><td>\\n</td><td style="text-align:center;">匹配换行符</td><td style="text-align:center;"></td></tr><tr><td>\\r</td><td style="text-align:center;">匹配回车符</td><td style="text-align:center;"></td></tr><tr><td>\\t</td><td style="text-align:center;">匹配tab键</td><td style="text-align:center;"></td></tr><tr><td>\\v</td><td style="text-align:center;">匹配垂直制表符</td><td style="text-align:center;"></td></tr><tr><td>\\w</td><td style="text-align:center;">匹配字母/数字/下划线</td><td style="text-align:center;">[0-9a-Z_]</td></tr><tr><td>\\W</td><td style="text-align:center;">匹配非 字母/数字/下划线</td><td style="text-align:center;">[^0-9a-Z_]</td></tr><tr><td>\\s</td><td style="text-align:center;">匹配空白字符(空格,tab等)</td><td style="text-align:center;">[\\t\\n\\v]</td></tr><tr><td>\\S</td><td style="text-align:center;">匹配非空白字符</td><td style="text-align:center;">[^\\t\\n\\v]</td></tr><tr><td>\\d</td><td style="text-align:center;">匹配数字字符,0~9</td><td style="text-align:center;">[0-9]</td></tr><tr><td>\\D</td><td style="text-align:center;">匹配非数字字符</td><td style="text-align:center;">[^0-9]</td></tr><tr><td>\\b</td><td style="text-align:center;">匹配单词边界</td><td style="text-align:center;"></td></tr><tr><td>\\B</td><td style="text-align:center;">匹配非单词边界</td><td style="text-align:center;"></td></tr><tr><td>\\\\</td><td style="text-align:center;">匹配 \\ 本身</td><td style="text-align:center;"></td></tr></tbody></table><h3 id="量词" tabindex="-1">量词 <a class="header-anchor" href="#量词" aria-label="Permalink to &quot;量词&quot;">​</a></h3><table><thead><tr><th>key</th><th style="text-align:center;">value</th></tr></thead><tbody><tr><td>{n}</td><td style="text-align:center;">匹配 n 次</td></tr><tr><td>{n,m}</td><td style="text-align:center;">匹配n-m次,优先匹配m次,比如a{1,3},可以匹配aaa、aa、a</td></tr><tr><td>{n,}</td><td style="text-align:center;">匹配n-∞次,优先匹配∞次,比如a{1,},可以匹配aaaaa....</td></tr><tr><td>?</td><td style="text-align:center;">匹配0或1次,优先1次</td></tr><tr><td>+</td><td style="text-align:center;">匹配1-n次,优先n次</td></tr><tr><td>*</td><td style="text-align:center;">匹配0-n次,优先n次</td></tr><tr><td>.</td><td style="text-align:center;">匹配除 /n 之外的任意字符</td></tr></tbody></table><h3 id="修饰符" tabindex="-1">修饰符 <a class="header-anchor" href="#修饰符" aria-label="Permalink to &quot;修饰符&quot;">​</a></h3><ul><li>g: 全局修饰符</li><li>i: 忽略大小写</li><li>m: 匹配多行文本</li></ul><h2 id="相关api" tabindex="-1">相关api <a class="header-anchor" href="#相关api" aria-label="Permalink to &quot;相关api&quot;">​</a></h2><h3 id="验证" tabindex="-1">验证 <a class="header-anchor" href="#验证" aria-label="Permalink to &quot;验证&quot;">​</a></h3><p><code>search</code> <code>test</code> <code>match</code> <code>exec</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc123</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">search</span><span style="color:#A6ACCD;">(regex) )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( regex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(string) )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(regex) )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [&#39;1&#39;, index: 3, input: &#39;abc123&#39;, groups: undefined]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( regex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;">(string) )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [&#39;1&#39;, index: 3, input: &#39;abc123&#39;, groups: undefined]</span></span>
<span class="line"></span></code></pre></div><h3 id="切分" tabindex="-1">切分 <a class="header-anchor" href="#切分" aria-label="Permalink to &quot;切分&quot;">​</a></h3><p><code>split</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">html,css,javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(regex))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [&#39;html&#39;, &#39;css&#39;, &#39;javascript&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-10-30</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\D</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(regex))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [&#39;2022&#39;, &#39;10&#39;, &#39;30&#39;]</span></span>
<span class="line"></span></code></pre></div><h3 id="提取" tabindex="-1">提取 <a class="header-anchor" href="#提取" aria-label="Permalink to &quot;提取&quot;">​</a></h3><p>基本上和上面的 <code>验证模块</code> 用的方法一样,不一样的是 <code>test</code> 和 <code>search</code> 获取值的方式,以及 <code>replace</code> 也可以使用正则提取</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{4})</span><span style="color:#C3E88D;">\\D</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">\\D</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2017-06-26</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">regex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(string)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$3 )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &quot;2017&quot; &quot;06&quot; &quot;26&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">search</span><span style="color:#A6ACCD;">(regex)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> RegExp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$3 )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &quot;2017&quot; &quot;06&quot; &quot;26&quot;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这是 replace 提取的方式 <br> 注意它的第二个参数,也是把分组内捕获到的值传进来了</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> regex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{4})</span><span style="color:#C3E88D;">\\D</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">\\D</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2017-06-26</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(regex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">match</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">year</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">month</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">day</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">year</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">month</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">day</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [&quot;2017&quot;, &quot;06&quot;, &quot;26&quot;]</span></span>
<span class="line"></span></code></pre></div><h3 id="替换" tabindex="-1">替换 <a class="header-anchor" href="#替换" aria-label="Permalink to &quot;替换&quot;">​</a></h3><p><code>replace</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2017-06-26</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> today </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">( string</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">( today )</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Mon Jun 26 2017 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span></code></pre></div><h3 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><ol><li><code>search</code> 和 <code>match</code> 会把字符串转为正则,例如将 <code>.</code> 转为通位符,需要这样: string.search(&#39;/./&#39;)</li><li><code>exec</code> 比 <code>match</code> 更强大, <code>match</code> 添加 <code>/g</code> 后不会显示捕获值,而 <code>exec</code> 还是可以展示</li></ol><h2 id="回溯法原理" tabindex="-1">回溯法原理 <a class="header-anchor" href="#回溯法原理" aria-label="Permalink to &quot;回溯法原理&quot;">​</a></h2><p>回溯法也称试探法，它的基本思想是：从问题的某一种状态（初始状态）出发，搜索从这种状态出发所能达到的所有“状态”，当一条路走到“尽头”的时候（不能再前进），再后退一步或若干步，从另一种可能“状态”出发，继续搜索，直到所有的“路径”（状态）都试探过。这种不断“前进”、不断“回溯”寻找解的方法，就称作“回溯法”。（copy于百度百科）</p><p>所以我们在使用正则的时候要尽量精确一些,比如类似于 <code>.</code> 这样的少用一些...</p><p>产生回溯的地方</p><ul><li>贪婪量词(例如 <code>{1,2}</code> )</li><li>惰性量词(例如 <code>{1,2}?</code> )</li><li>分支结构(例如 <code>|</code> )</li></ul><h2 id="位置" tabindex="-1">位置 <a class="header-anchor" href="#位置" aria-label="Permalink to &quot;位置&quot;">​</a></h2><h3 id="b-和-b" tabindex="-1">\\b 和 \\B <a class="header-anchor" href="#b-和-b" aria-label="Permalink to &quot;\\b 和 \\B&quot;">​</a></h3><p>\\b是单词边界，具体就是\\w和\\W之间的位置，也包括\\w和^之间的位置，也包括\\w和$之间的位置</p><p>没搞懂什么意思,😭,感觉不像是在上面那句话一样直白,自己测了一下有点和想象中的出入</p><h3 id="预搜索" tabindex="-1">预搜索 <a class="header-anchor" href="#预搜索" aria-label="Permalink to &quot;预搜索&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ?=  以 xxx(?=pattern)为例 就是捕获以pattern结尾的内容xxx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ?!  以 xxx(?!pattern)为例 就是捕获不以pattern结尾的内容xxx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ?&lt;= 以(?&lt;=pattern)xxx为例 就是捕获以pattern开头的内容xxx</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ?&lt;! 以(?&lt;!pattern)xxx为例 就是捕获不以pattern开头的内容xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123hell12ow#</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> patt </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+)</span><span style="color:#C3E88D;">hell</span><span style="color:#89DDFF;">(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+)/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(patt)) </span><span style="color:#676E95;font-style:italic;">// [hell]</span></span>
<span class="line"></span></code></pre></div><h2 id="分组与引用" tabindex="-1">分组与引用 <a class="header-anchor" href="#分组与引用" aria-label="Permalink to &quot;分组与引用&quot;">​</a></h2><h3 id="捕获组" tabindex="-1">捕获组 <a class="header-anchor" href="#捕获组" aria-label="Permalink to &quot;捕获组&quot;">​</a></h3><p>当我们用一对小括号 <code>()</code> 包住一个正则表达式时就形成了捕获组</p><p>作用:</p><ol><li>匹配括号内的正则表达式</li><li>拆分匹配到的数据</li><li>反向引用</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12,12</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> patt </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">,</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// \\1 表示第一个括号内捕获到的值,同理可以有 \\2, \\3, 最多到 \\9</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(patt)) </span><span style="color:#676E95;font-style:italic;">// [&#39;12,12&#39;, &#39;12&#39;, index: 0, input: &#39;12,12&#39;, groups: undefined]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 12,12 表示匹配到的结果</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 12 表示第一个括号内捕获到的值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// index 表示结果字符串在完整字符串中的开始下标</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// input 表示完整字符串</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// groups 表示命命捕获组,会在后续讲到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 注意: 当 patt = /^(\\d{2}),(\\d{2})$/ 时,结果为 [&#39;12,12&#39;, &#39;12&#39;, &#39;12&#39; index: 0, input: &#39;12,12&#39;, groups: undefined], 不是因为用反向引用不会被当作一个捕获组,所以在结果中没有打印,而是因为反向引用的结果会隐藏</span></span>
<span class="line"></span></code></pre></div><h3 id="非捕获组" tabindex="-1">非捕获组 <a class="header-anchor" href="#非捕获组" aria-label="Permalink to &quot;非捕获组&quot;">​</a></h3><p>不能再使用 <code>\\1</code> 这样的反向引用,在捕获组基础上,也就是 <code>()</code> 内前面加上 <code>?:</code> 就能变成非捕获组,</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12,12</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> patt </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(?:</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">(?:</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{2})</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(patt)) </span><span style="color:#676E95;font-style:italic;">// [&#39;12,12&#39;, index: 0, input: &#39;12,12&#39;, groups: undefined]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可以看到结果只显示了匹配结果,不会有各个捕获组的捕获结果</span></span>
<span class="line"></span></code></pre></div><h3 id="命名捕获组" tabindex="-1">命名捕获组 <a class="header-anchor" href="#命名捕获组" aria-label="Permalink to &quot;命名捕获组&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc,12,s,b,abc,abc12</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> patt </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/(?&lt;</span><span style="color:#A6ACCD;">firstName</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">{3})</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">{2})</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">(?:</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">{1})</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">\\w</span><span style="color:#89DDFF;">{1})</span><span style="color:#C3E88D;">,</span><span style="color:#F78C6C;">\\k&lt;</span><span style="color:#A6ACCD;">firstName</span><span style="color:#F78C6C;">&gt;</span><span style="color:#C3E88D;">,</span><span style="color:#F78C6C;">\\1\\2</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(patt))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 结果为</span></span>
<span class="line"><span style="color:#A6ACCD;">[ </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc,12,s,b,abc,abc12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> index: </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> input: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc,12,s,b,abc,abc12</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  groups: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">firstName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可以发现</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1. 命名捕获组和普通捕获组能共存</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 命名捕获组的结果在groups对象中会显现</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. 命名捕获组使用方式为 \\k&lt;name&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. 命名捕获组的结果也能用 /1 的方式反向引用</span></span>
<span class="line"></span></code></pre></div>`,48),p=[t];function e(c,r,D,y,F,i){return n(),a("div",null,p)}const d=s(o,[["render",e]]);export{A as __pageData,d as default};
