import{_ as a,c as s,o as e,N as l}from"./chunks/framework.78c68b71.js";const _=JSON.parse('{"title":"text-encrypt","description":"","frontmatter":{},"headers":[],"relativePath":"tools/encrypt/core.md","lastUpdated":1675691846000}'),n={name:"tools/encrypt/core.md"},t=l(`<h1 id="text-encrypt" tabindex="-1">text-encrypt <a class="header-anchor" href="#text-encrypt" aria-label="Permalink to &quot;text-encrypt&quot;">​</a></h1><p>对文本的 [ 加密 / 解密 ] 脚本</p><p>git地址 <a href="https://github.com/M-cheng-web/text-encrypt" target="_blank" rel="noreferrer">https://github.com/M-cheng-web/text-encrypt</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">注意: 目前此脚本需要配合 node 环境使用 (如有需要可以后续改为纯shell脚本~)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="初衷" tabindex="-1">初衷 <a class="header-anchor" href="#初衷" aria-label="Permalink to &quot;初衷&quot;">​</a></h2><p>瞎折腾~</p><p>因为我在 github 上有一个博客,但是我想在这个博客上记录一些自己的生活以及工作上的事,甚至以后可以记日记咯,存一些纯文本的隐私密码什么的,这些都属于我个人隐私了,我又不想放在普通的软件笔记上,咋办捏,就自己想整一个加密的东西,能让我快速加密提交以及拉取解密,于是花了点整出来个勉强能用的咯 ~ ~ ~</p><p>结构很简单,过程很快乐,我也从不懂shell脚本到勉强了解一些了,各路大神有兴趣的话希望能帮我完善一下呀~~</p><h2 id="功能点" tabindex="-1">功能点 <a class="header-anchor" href="#功能点" aria-label="Permalink to &quot;功能点&quot;">​</a></h2><ol><li>对 [ 全部 / 指定 ] 文件夹下所有的文件进行加密 (暂时只是对编码格式进行转换达到肉眼加密效果,如需aes加密可扩展)</li><li>对 [ 全部 / 指定 ] 文件夹下所有的文件进行解密 (只会对加密过的文件进行解密)</li><li>加密解密时,可对 [ 指定 ] 文件夹标明不参与加密解密动作</li><li>可自动加密后提交远程,拉取代码后自动解密 (可更改 push.sh &gt; defaultBranch 来选取分支)</li><li>提供操作回退功能,当某次操作错误导致加密了其他文件,可用此功能回退 (只会记录上次操作)</li><li>可设置 <code>SELF_ENCRYPT</code> 文件夹是否提交到远程</li></ol><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ol><li>将 <code>SELF_ENCRYPT</code> 文件夹复制到你的项目中</li><li>在项目根路径执行命令,如: <code>sh SELF_ENCRYPT/index.sh on all</code></li><li>也可以将 <code>SELF_ENCRYPT/index.sh</code> 文件移植到你的项目根目录(不需要更改任何代码,或者可以重命名),随后执行命令如: <code>sh index.sh on all</code></li><li>调试的话也可以自己先在demo内随便玩玩呗,如果有精力可以帮助我完成下面的待做~</li></ol><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><table><thead><tr><th>参数位</th><th>说明</th><th>可选值</th><th>是否必填</th></tr></thead><tbody><tr><td>参数一</td><td>详情见下方</td><td>on / off / push / pull / nogit / back</td><td>是</td></tr><tr><td>参数二</td><td>需要加密的文件夹 (支持 all)</td><td>all / fileNameA fileNameB ...</td><td>是</td></tr><tr><td>参数三</td><td>不需要加密的文件夹 (不支持 all)</td><td>fileNameA fileNameB ...</td><td>否</td></tr></tbody></table><p>参数一说明</p><ul><li>on / off: 代表 加密,解密</li><li>push / pull: 代表 加密,解密 (会提交代码到远程)</li><li>nogit: 代表 加密的源码(SELF_ENCRYPT文件夹)不会提交到git</li><li>back: 代表 回滚上一次操作(为了防止加密解密错误)</li></ul><p>警告: 指定文件时开头不能用 <code>/</code> (加密方法是强制拿到 SELF_ENCRYPT 文件夹同级的文件路径再进行拼接后才加密,如果开头出现 <code>/</code> 也会导致找不到文件则退出加密的情况,杜绝了加密到项目根目录之外文件的情况),如这种写法就是错误的: <code>sh index.sh on &#39;/demo /index.js&#39;</code></p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 加密所有文件夹下的所有文件</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh on all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 解密所有文件夹下的所有文件</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh off all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 加密项目根目录下 pages 以及 utils 文件夹下的所有文件,以及根目录下的 index.txt 文件</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh on &#39;pages utils index.txt&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 加密项目根目录下 pages 文件夹, 排除 pages/demo1 以及 pages/demo1 文件夹下所有文件,以及排除 pages/index.js 文件</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh on pages &#39;pages/demo1 pages/demo2 pages/index.js&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 回退至上一次操作</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh back</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// 将 SELF_ENCRYPT文件夹 设置为不能提交至远程</span></span>
<span class="line"><span style="color:#A6ACCD;">sh SELF_ENCRYPT/index.sh nogit</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><ol><li>目前只支持纯文本文件( <code>.md .text js html vue ...</code> ), 不支持 <code>.doc .ppt</code> 这样的文件</li><li>SELF_ENCRYPT 文件夹放在项目根目录</li><li>执行脚本时 要求在项目根路径执行 (目前内部脚本没有用绝对路径)</li><li>不能对已加密或者已解密的文件进行再次 加密/解密</li><li>不会对隐藏文件进行操作</li><li>文件取名不能带有空格 (可以取名,但是在指定文件加密或者解密时会因为空格问题导致不能正确指定文件)</li><li>目前是依赖于 node 环境的 (没有node环境将无效~)</li><li>传参不能手动传 *, 要传 all, 传 * 会将路径解析出来再给到脚本,这样不行</li></ol><h2 id="待做" tabindex="-1">待做 <a class="header-anchor" href="#待做" aria-label="Permalink to &quot;待做&quot;">​</a></h2><ol><li>目前是依赖于 node环境的,希望shell能一把嗦</li><li>目前是防君子不防小人~~,因为并没有建立私钥的概念</li><li>以后可以绑定 git,根据git 钩子来自动加密</li><li>目前是无限往 .git 文件添加的,要去重</li><li>想配合 vscode 插件完成私钥的概念</li><li>怎么样达到能让非程序员一键加密,也能让程序员配合插件更快乐的加密?????</li></ol>`,23),o=[t];function i(p,c,d,r,h,C){return e(),s("div",null,o)}const u=a(n,[["render",i]]);export{_ as __pageData,u as default};
