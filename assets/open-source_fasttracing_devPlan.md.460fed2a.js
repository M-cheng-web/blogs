import{_ as i,c as l,o as e,N as a}from"./chunks/framework.78c68b71.js";const m=JSON.parse('{"title":"开发计划","description":"","frontmatter":{},"headers":[],"relativePath":"open-source/fasttracing/devPlan.md","lastUpdated":1679651078000}'),t={name:"open-source/fasttracing/devPlan.md"},o=a('<h1 id="开发计划" tabindex="-1">开发计划 <a class="header-anchor" href="#开发计划" aria-label="Permalink to &quot;开发计划&quot;">​</a></h1><h2 id="_202303" tabindex="-1">202303 <a class="header-anchor" href="#_202303" aria-label="Permalink to &quot;202303&quot;">​</a></h2><ol><li>熟悉sentry</li><li>熟悉神策</li><li>列出历史版本以及未来版本的功能点(参考所有资料后总结出自己想要做出的样子)</li></ol><h2 id="一期-现有功能" tabindex="-1">一期（现有功能） <a class="header-anchor" href="#一期-现有功能" aria-label="Permalink to &quot;一期（现有功能）&quot;">​</a></h2><ul><li>简单支持 vue2 + vue3</li><li>自动采集 + 暴露api给用户手动采集上报</li><li>采集功能：【用户事件采集、页面跳转采集、请求采集、错误采集、资源加载采集】</li><li>采集上传方法：只提供 sendBeacon(内部自动降级为image)</li></ul><h2 id="二期-预计2023-5-2023-6-完成" tabindex="-1">二期（预计2023.5 - 2023.6 完成） <a class="header-anchor" href="#二期-预计2023-5-2023-6-完成" aria-label="Permalink to &quot;二期（预计2023.5 - 2023.6 完成）&quot;">​</a></h2><ul><li>整体代码结构更改</li><li>现有bug解决</li><li>文档系统与sdk核心代码融合 (vuepress -&gt; vitepress)</li><li>js -&gt; ts</li><li>更好的兼容 vue2、vue3（react以及小程序优先级靠后一些）</li><li>支持暴露更多变量（例如最大缓存数、延迟上传时间、dom埋点名称等等）</li><li>支持hook以及自定义hook</li><li>支持加密传输（加密方式待确定）</li><li>关于用户信息的重构 - 【1.分为未登录与已登录的场景，登录后进行绑定，机器与用户id进行多对多绑定(更多方案还在确定中) 2.支持动态修改用户信息】</li><li>支持更多上传方式</li><li>支持延迟加载sdk、异步发送敏感数据</li><li>支持暴露更多sdk内部方法（例如使用者想要拿到此时的硬件数据）</li><li>支持抽样发送，数据临时存储本地的形式减少服务端压力（这里同样也支持断网续联后发送）</li><li>支持更多的事件以及行为监听</li><li>支持对特定dom监控事件（例如监控页面button按钮的点击事件，这在大批量埋点场景中比较需要，另提供一些属性来标识特定按钮无需采集）</li><li>支持区间打点，区间采集</li><li>支持区域曝光度采集</li><li>支持静默（通过配置来设定遇到大批量事件时sdk静默或者用范围时间记录上报，例如当大批量报错时）</li><li>支持错误信息去重（并自动转为区间事件）</li><li>为 vue3 提供一系列个性化hooks</li><li>sourcemap 错误跟踪</li><li>最大上传长度限定</li><li>提供 ignoreErrors，ignoreRequest 等</li><li>白屏检测</li><li>首次首屏数据更精确化</li><li>demo官网示例更简单化且提供在线编写能力</li><li>探索：一些关键性的api能让使用者去替代更改、比如监听网络状态的内部实现支持使用者去重写</li><li>探索：插件化（核心功能+其他插件的形式）</li><li>探索：错误录屏</li></ul>',7),r=[o];function s(n,d,c,u,_,h){return e(),l("div",null,r)}const f=i(t,[["render",s]]);export{m as __pageData,f as default};
